@page "/Login"
@page "/Login/{ReturnUrl}"

@rendermode InteractiveServer
@inject SignInManager<IdentityUser> _signInManager;
@inject AutenticacaoService _autenticacaoService;
@inject AutenticacaoService _service
@inject NavigationManager _nav

<PageTitle>Login</PageTitle>
<div class="row">
    <div class="col-md-4">
        <section>
            <EditForm Model="@Input" OnValidSubmit="@OnPostAsync" FormName="loginForm" 
                class="d-flex flex-column align-items-center">
                <DataAnnotationsValidator />
                <ValidationSummary/>
                <h4>Use a local account to log in.</h4>
                <hr />
                <div class="form-group w-100 mb-4">
                    <label for="#email">Email</label>
                    <InputText class="form-control" @bind-Value="Input!.Email"/>
                </div>
                <div class="form-group w-100 mb-4">
                    <label for="#senha">Senha</label>
                    <InputText class="form-control" type="password" @bind-Value="Input!.Password" />
                    
                </div>
                <div class="form-group mb-3">
                    <button type="submit" class="btn btn-default btn-primary py-2 px-5 ">
                        <span class="m-5">Log in</span>
                    </button>
                </div>
                <div class="form-group">
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@ReturnUrl">Criar conta</a>
                    </p>
                </div>
            </EditForm>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                if ((ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@code {
    [Parameter]
    public string? ReturnUrl { get; set; } = "/";

    [SupplyParameterFromForm]
    public LoginViewModel? Input { get; set; }

    public IList<AuthenticationScheme> ExternalLogins { get; set; }

    private List<string> Errors;

    protected override async Task OnInitializedAsync()
    {
        Input = new();
        Errors = new();

        ExternalLogins = (await _signInManager.GetExternalAuthenticationSchemesAsync()).ToList();
    }

    public async Task OnPostAsync()
    {
        ExternalLogins = (await _signInManager.GetExternalAuthenticationSchemesAsync()).ToList();

        var result = await _autenticacaoService.RealizarLogin(Input);
        if (await result.IsValid())
        {
            _nav.NavigateTo(ReturnUrl ?? "/");
        }
        else
            if (await result.Contains("Usuario temporariamente bloqueado por tentativas invalidas"))
            _nav.NavigateTo("./Lockout");
        else
        {
            Errors.Add(await result.ObterPrimeiroErro());
        }        
    }
}
