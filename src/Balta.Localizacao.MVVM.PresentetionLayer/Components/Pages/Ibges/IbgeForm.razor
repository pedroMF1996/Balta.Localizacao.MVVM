@page "/ibge-form"
@rendermode InteractiveServer
@attribute [Authorize]
<PageTitle>
    @pageTitle
</PageTitle>

<FluentGrid Justify="@JustifyContent.Center">
    <FluentGridItem>
        <FluentCard>
            <FluentLabel Alignment="HorizontalAlignment.Center">
                @pageTitle
            </FluentLabel>

            <EditForm Model="ViewModel">
                <FluentTextField Appearance="FluentInputAppearance.Filled"
                                 Label="Codigo" Style="width:100%" @bind-Value="ViewModel!.Id" />

                <FluentTextField Appearance="FluentInputAppearance.Filled"
                                 Label="Estado" Style="width:100%" @bind-Value="ViewModel!.State" />

                <FluentTextField Appearance="FluentInputAppearance.Filled"
                                   Label="Cidade" Style="width:100%" @bind-Value="ViewModel!.City" />

                <FluentButton Appearance="Appearance.Accent" OnClick="()=>Save()">
                    @pageTitle
                </FluentButton>

                <FluentAnchor Href="/listar">Cancelar</FluentAnchor>
            </EditForm>

        </FluentCard>
    </FluentGridItem>
</FluentGrid>

@code {

    [Parameter]
    public string? Id { get; set; } = null;

    private string pageTitle => "Cadastrar Novo Registro IBGE";

    [SupplyParameterFromForm]
    public IbgeAdicionarViewModel? ViewModel { get; set; } = new IbgeAdicionarViewModel();

    protected override async Task OnInitializedAsync()
    {   
        await base.OnInitializedAsync();
    }

    private async Task Save()
    {   
        var response = await _service.AdicionarIbge(ViewModel!);
        if (!await response.IsCompleted())
        {
            foreach (var erro in response.Errors)
            {
                DialogService.ShowError(erro);
            }
        }
        else
        {
            DialogService.ShowSuccess($"Registro IBGE {ViewModel.City} incluido com sucesso");
        
            ToastService.ShowInfo($"Retornando para lista de registros");
            await Task.Delay(1500);
            NavigationManager.NavigateTo("/listar");
        }
    }
}